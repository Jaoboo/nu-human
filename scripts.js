// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
let allData = [];
let filteredData = [];

// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á - ‡πÉ‡∏™‡πà SHEET_ID ‡∏Ç‡∏≠‡∏á Google Sheets ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ
const SHEET_ID = '1CJhSu3XwPTC35SxXzGnOwz8a8c_D_1eI';
const SHEET_NAME = 'web app(‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏ó‡∏≥)';

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏™‡∏£‡πá‡∏à
$(document).ready(function() {
    console.log('üöÄ Starting application...');
    
    // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
    loadData();

    // ‡∏õ‡∏∏‡πà‡∏° Excel
    $('.btn.excel').click(exportToExcel);
    
    // Dropdown: ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    $('#typeFilter, #yearFilter, #deptFilter, #rankFilter').on('change', function() {
        console.log('Dropdown changed:', $(this).attr('id'), '=', $(this).val());
        filterData();
    });
    
    // Input text: ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏ö‡∏ö Real-time ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå
    $('#keyword, #authorFilter').on('input', function() {
        console.log('Input changed:', $(this).attr('id'), '=', $(this).val());
        filterData();
    });
});

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Sheets
function loadData() {
    console.log('üì• Loading data from Google Sheets...');
    console.log('SHEET_ID:', SHEET_ID);
    console.log('SHEET_NAME:', SHEET_NAME);
    
    if (!SHEET_ID || SHEET_ID === '') {
        alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà SHEET_ID ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå script.js');
        $('#dataTable tbody').html('<tr><td colspan="6" class="no-data">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà SHEET_ID</td></tr>');
        return;
    }
    
    const url = `https://docs.google.com/spreadsheets/d/${SHEET_ID}/gviz/tq?tqx=out:json&sheet=${encodeURIComponent(SHEET_NAME)}`;
    console.log('üìç Request URL:', url);
    
    // ‡πÅ‡∏™‡∏î‡∏á Loading
    $('#dataTable tbody').html('<tr><td colspan="6" style="text-align:center; padding:20px;">‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</td></tr>');
    
    $.ajax({
        url: url,
        dataType: 'text',
        timeout: 10000,
        success: function(response) {
            console.log('‚úÖ AJAX Success! Response length:', response.length);
            console.log('First 100 chars:', response.substring(0, 100));
            
            try {
                // ‡∏•‡∏ö prefix ‡πÅ‡∏•‡∏∞ suffix ‡∏Ç‡∏≠‡∏á Google Sheets API
                const jsonString = response.substring(47, response.length - 2);
                const data = JSON.parse(jsonString);
                
                console.log('üìä Parsed data structure:', {
                    cols: data.table.cols.length,
                    rows: data.table.rows.length
                });
                
                // ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
                const columnNames = data.table.cols.map(col => col.label || 'unnamed');
                console.log('üìã Column names:', columnNames);
                
                // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô Array of Objects
                allData = data.table.rows.map(row => {
                    const obj = {};
                    row.c.forEach((cell, index) => {
                        const header = data.table.cols[index].label || `col${index}`;
                        obj[header] = cell ? (cell.v || '') : '';
                    });
                    return obj;
                });
                
                console.log('‚úÖ Data loaded successfully:', allData.length, 'rows');
                console.log('üìÑ First row sample:', allData[0]);
                
                // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å filter
                filteredData = [...allData];
                populateAuthorsDatalist();
                populateDropdownOptions(); // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ
                displayData(filteredData);
                updateCount();
                
            } catch (error) {
                console.error('‚ùå Error parsing data:', error);
                console.error('Error stack:', error.stack);
                alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•\n\n' + error.message);
                $('#dataTable tbody').html('<tr><td colspan="6" class="no-data">‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•<br>' + error.message + '</td></tr>');
            }
        },
        error: function(xhr, status, error) {
            console.error('‚ùå AJAX Error!');
            console.error('Status:', status);
            console.error('Error:', error);
            console.error('XHR Status:', xhr.status);
            console.error('XHR Response:', xhr.responseText);
            
            let errorMsg = '‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ\n\n';
            errorMsg += '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:\n';
            errorMsg += '1. Google Sheets ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏£‡πå‡πÄ‡∏õ‡πá‡∏ô "Anyone with the link"\n';
            errorMsg += '2. ‡∏ä‡∏∑‡πà‡∏≠ Sheet (‡πÅ‡∏ó‡πá‡∏ö) ‡∏ï‡πâ‡∏≠‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á: "' + SHEET_NAME + '"\n';
            errorMsg += '3. SHEET_ID ‡∏ï‡πâ‡∏≠‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á: ' + SHEET_ID + '\n\n';
            errorMsg += '‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:\n';
            errorMsg += 'Status: ' + status + '\n';
            errorMsg += 'Error: ' + error;
            
            alert(errorMsg);
            
            $('#dataTable tbody').html(`
                <tr><td colspan="6" class="no-data">
                    ‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ<br><br>
                    <strong>‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:</strong><br>
                    1. ‡πÄ‡∏õ‡∏¥‡∏î Google Sheets<br>
                    2. ‡∏Ñ‡∏•‡∏¥‡∏Å "Share" (‡πÅ‡∏ä‡∏£‡πå) ‡∏°‡∏∏‡∏°‡∏Ç‡∏ß‡∏≤‡∏ö‡∏ô<br>
                    3. ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "Anyone with the link"<br>
                    4. ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå: "Viewer"<br>
                    5. ‡∏Ñ‡∏•‡∏¥‡∏Å "Done"<br><br>
                    <small>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Console (‡∏Å‡∏î F12) ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</small>
                </td></tr>
            `);
        }
    });
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏ï‡∏¥‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Datalist ‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå (AutoComplete)
function populateAuthorsDatalist() {
    const authors = new Set();
    
    allData.forEach(row => {
        const keys = Object.keys(row);
        
        // ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ú‡∏•‡∏á‡∏≤‡∏ô (index 2)
        const authorColumn = keys[2];
        if (row[authorColumn] && row[authorColumn].trim() !== '') {
            authors.add(row[authorColumn].trim());
        }
    });

    const $datalist = $('#authorList');
    $datalist.empty();
    
    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤ datalist
    Array.from(authors).sort().forEach(author => {
        $datalist.append(`<option value="${author}">`);
    });
    
    console.log('üë• Authors loaded:', authors.size);
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏ï‡∏¥‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Dropdown Options ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á
function populateDropdownOptions() {
    const years = new Set();
    
    allData.forEach(row => {
        const columns = Object.values(row);
        
        // ‡∏õ‡∏µ (‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà 1)
        if (columns[1] && columns[1].toString().trim() !== '') {
            const year = columns[1].toString().trim();
            // ‡∏î‡∏∂‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏õ‡∏µ (‡∏Å‡∏£‡∏ì‡∏µ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏∑‡πà‡∏ô‡∏õ‡∏ô‡∏°‡∏≤)
            const yearMatch = year.match(/\d{4}/);
            if (yearMatch) {
                years.add(yearMatch[0]);
            }
        }
    });

    // ‡πÄ‡∏ï‡∏¥‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏õ‡∏µ
    const $yearFilter = $('#yearFilter');
    $yearFilter.find('option:not(:first)').remove(); // ‡πÄ‡∏Å‡πá‡∏ö option "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"
    Array.from(years).sort((a, b) => a - b).forEach(year => {
        $yearFilter.append(`<option value="${year}">${year}</option>`);
    });
    
    console.log('üìã ‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:', Array.from(years).sort());
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
function filterData() {
    const yearType = $('#typeFilter').val().trim();
    const year = $('#yearFilter').val().trim();
    const dept = $('#deptFilter').val().trim();
    const rank = $('#rankFilter').val().trim();
    const author = $('#authorFilter').val().toLowerCase().trim();
    const searchName = $('#keyword').val().toLowerCase().trim();

    console.log('üîç Filtering with:', {yearType, year, dept, rank, author, searchName});

    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏•‡∏¢ ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    if (!yearType && !year && !dept && !rank && !author && !searchName) {
        filteredData = [...allData];
        displayData(filteredData);
        updateCount();
        return;
    }

    filteredData = allData.filter(row => {
        const columns = Object.values(row);
        
        // ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏õ‡∏µ (‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà 0)
        if (yearType && !columns[0].toString().toLowerCase().includes(yearType.toLowerCase())) return false;
        
        // ‡∏õ‡∏µ (‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà 1)
        if (year && !columns[1].toString().includes(year)) return false;
        
        // ‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ú‡∏•‡∏á‡∏≤‡∏ô (‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà 2)
        if (author && !columns[2].toString().toLowerCase().includes(author)) return false;
        
        // ‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î‡∏†‡∏≤‡∏Ñ‡∏ß‡∏¥‡∏ä‡∏≤ (‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà 3)
        if (dept && !columns[3].toString().includes(dept)) return false;
        
        // ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏•‡∏á‡∏≤‡∏ô (‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà 4)
        if (searchName && !columns[4].toString().toLowerCase().includes(searchName)) return false;
        
        // ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ú‡∏•‡∏á‡∏≤‡∏ô - ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
        if (rank) {
            const allText = columns.join(' ');
            if (!allText.includes(rank)) return false;
        }
        
        return true;
    });

    console.log('‚úÖ Filtered results:', filteredData.length);
    displayData(filteredData);
    updateCount();
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á
function displayData(data) {
    const $tbody = $('#dataTable tbody');
    $tbody.empty();

    if (data.length === 0) {
        $tbody.html('<tr><td colspan="6" class="no-data">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</td></tr>');
        return;
    }

    console.log('üìä Displaying', data.length, 'rows');

    data.forEach((row, index) => {
        const columns = Object.values(row);
        
        // Debug: ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 3 ‡πÅ‡∏ñ‡∏ß‡πÅ‡∏£‡∏Å
        if (index < 3) {
            console.log(`Row ${index}:`, columns);
        }
        
        // ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà 6 ‡∏Ñ‡∏∑‡∏≠‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á (index 5 ‡∏´‡∏£‡∏∑‡∏≠ 6 ‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•)
        const reference = columns[5] || columns[6] || '-';
        
        const rowHTML = `
            <tr>
                <td>${columns[0] || '-'}</td>
                <td>${columns[1] || '-'}</td>
                <td>${columns[2] || '-'}</td>
                <td>${columns[3] || '-'}</td>
                <td>${columns[4] || '-'}</td>
                <td>${reference}</td>
            </tr>
        `;
        $tbody.append(rowHTML);
    });
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
function updateCount() {
    $('#count').text(filteredData.length);
    console.log('üìà Count updated:', filteredData.length);
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Export ‡πÑ‡∏õ‡∏¢‡∏±‡∏á Excel
function exportToExcel() {
    if (filteredData.length === 0) {
        alert('‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Export');
        return;
    }

    console.log('üì§ Exporting', filteredData.length, 'rows to Excel');

    const wb = XLSX.utils.book_new();
    const headers = Object.keys(filteredData[0]);
    const data = filteredData.map(row => Object.values(row));
    const ws = XLSX.utils.aoa_to_sheet([headers, ...data]);
    
    XLSX.utils.book_append_sheet(wb, ws, '‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡∏ï‡∏µ‡∏û‡∏¥‡∏°‡∏û‡πå');
    
    const fileName = `‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡∏ï‡∏µ‡∏û‡∏¥‡∏°‡∏û‡πå_${new Date().toLocaleDateString('th-TH')}.xlsx`;
    XLSX.writeFile(wb, fileName);
    
    console.log('‚úÖ Excel file exported:', fileName);
}