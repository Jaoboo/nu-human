// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
let allData = [];
let filteredData = [];

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô normalize ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° - ‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏•‡πá‡∏Å
function normalizeText(text) {
    if (!text) return '';
    return text.toString().replace(/\s+/g, '').toLowerCase();
}

// Default Options ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞ Dropdown
const defaultOptions = {
    dept: [
        "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î",
        "‡∏†‡∏≤‡∏Ñ‡∏ß‡∏¥‡∏ä‡∏≤‡∏†‡∏≤‡∏©‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå ‡∏Ñ‡∏ï‡∏¥‡∏ä‡∏ô‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤ ‡∏õ‡∏£‡∏±‡∏ä‡∏ç‡∏≤‡πÅ‡∏•‡∏∞‡∏®‡∏≤‡∏™‡∏ô‡∏≤",
        "‡∏†‡∏≤‡∏Ñ‡∏ß‡∏¥‡∏ä‡∏≤‡∏†‡∏≤‡∏©‡∏≤‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏ï‡∏Å",
        "‡∏†‡∏≤‡∏Ñ‡∏ß‡∏¥‡∏ä‡∏≤‡∏î‡∏ô‡∏ï‡∏£‡∏µ",
        "‡∏ú‡∏π‡πâ‡∏ï‡∏µ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏†‡∏≤‡∏Ñ‡∏ß‡∏¥‡∏ä‡∏≤",
        "‡∏†‡∏≤‡∏Ñ‡∏ß‡∏¥‡∏ä‡∏≤‡∏†‡∏≤‡∏©‡∏≤‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏≠‡∏≠‡∏Å",
        "‡∏†‡∏≤‡∏Ñ‡∏ß‡∏¥‡∏ä‡∏≤‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢",
        "‡∏†‡∏≤‡∏Ñ‡∏ß‡∏¥‡∏ä‡∏≤‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©",
        "‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏≤‡∏ô‡∏∏‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ì‡∏∞"
    ],
    rank: [
        "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î",
        "‡∏ß‡∏≤‡∏£‡∏™‡∏≤‡∏£‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏≤‡∏ï‡∏¥ TCI ‡∏Å‡∏•‡∏∏‡πà‡∏° 1",
        "‡∏ß‡∏≤‡∏£‡∏™‡∏≤‡∏£‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏≤‡∏ï‡∏¥ TCI ‡∏Å‡∏•‡∏∏‡πà‡∏° 2",
        "Proceedings ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ô‡∏≤‡∏ô‡∏≤‡∏ä‡∏≤‡∏ï‡∏¥",
        "‡∏ß‡∏≤‡∏£‡∏™‡∏≤‡∏£‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ô‡∏≤‡∏ô‡∏≤‡∏ä‡∏≤‡∏ï‡∏¥ Q1",
        "‡∏ß‡∏≤‡∏£‡∏™‡∏≤‡∏£‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ô‡∏≤‡∏ô‡∏≤‡∏ä‡∏≤‡∏ï‡∏¥ Q2",
        "‡∏ß‡∏≤‡∏£‡∏™‡∏≤‡∏£‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ô‡∏≤‡∏ô‡∏≤‡∏ä‡∏≤‡∏ï‡∏¥ Q3",
        "‡∏ß‡∏≤‡∏£‡∏™‡∏≤‡∏£‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ô‡∏≤‡∏ô‡∏≤‡∏ä‡∏≤‡∏ï‡∏¥ Q4",
    ]
};

// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á - ‡πÉ‡∏™‡πà SHEET_ID ‡∏Ç‡∏≠‡∏á Google Sheets ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ
const SHEET_ID = '1CJhSu3XwPTC35SxXzGnOwz8a8c_D_1eI';
const SHEET_NAME = 'web app(‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏à‡∏±‡∏î‡∏ó‡∏≥)';

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏™‡∏£‡πá‡∏à
$(document).ready(function() {
    
    // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
    loadData();

    // ‡∏õ‡∏∏‡πà‡∏° Reset
    $('.btn.reset').click(function() {
        // ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤ filters
        $('#typeFilter').val('‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤');
        $('#yearFilter').val('');
        $('#deptFilter').val('');
        $('#rankFilter').val('');
        $('#authorFilter').val('');
        $('#keyword').val('');
        
        // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        filteredData = [...allData];
        displayData(filteredData);
        updateCount();
    });

    // ‡∏õ‡∏∏‡πà‡∏° Refresh - ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å Google Sheets
    $('.btn.refresh').click(function() {
        const $icon = $(this).find('i');
        $icon.addClass('loading');
        
        // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
        loadData(true);
    });

    // ‡∏õ‡∏∏‡πà‡∏° Excel - Export ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á
    $('.btn.excel, .btn.excel-table').click(function() {
        exportTableToExcel();
    });
    
    // Dropdown: ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    $('#typeFilter').on('change', function() {
        console.log('Type filter changed:', $(this).val());
        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó dropdown ‡∏õ‡∏µ‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
        populateDropdownOptions();
        // ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
        filterData();
    });
    
    $('#yearFilter, #deptFilter, #rankFilter').on('change', function() {
        console.log('Dropdown changed:', $(this).attr('id'), '=', $(this).val());
        filterData();
    });
    
    // Input text: ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏ö‡∏ö Real-time ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå
    $('#keyword, #authorFilter').on('input', function() {
        console.log('Input changed:', $(this).attr('id'), '=', $(this).val());
        filterData();
    });
    
    // ‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ - ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
    $('.btn.search').click(function() {
        filterData();
    });
});

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Sheets
function loadData(isRefresh = false) {
    console.log('üì• Loading data from Google Sheets...');
    console.log('SHEET_ID:', SHEET_ID);
    console.log('SHEET_NAME:', SHEET_NAME);
    
    if (!SHEET_ID || SHEET_ID === '') {
        alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà SHEET_ID ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå script.js');
        $('#dataTable tbody').html('<tr><td colspan="8" class="no-data">‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà SHEET_ID</td></tr>');
        return;
    }
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° timestamp ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô cache ‡πÄ‡∏°‡∏∑‡πà‡∏≠ refresh
    const timestamp = isRefresh ? '&_=' + new Date().getTime() : '';
    const url = `https://docs.google.com/spreadsheets/d/${SHEET_ID}/gviz/tq?tqx=out:json&sheet=${encodeURIComponent(SHEET_NAME)}${timestamp}`;
    
    // ‡πÅ‡∏™‡∏î‡∏á Loading
    $('#dataTable tbody').html('<tr><td colspan="8" style="text-align:center; padding:20px;">‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</td></tr>');
    
    $.ajax({
        url: url,
        dataType: 'text',
        timeout: 10000,
        cache: false, // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô cache
        success: function(response) {
            console.log('AJAX Success! Response length:', response.length);
            console.log('First 100 chars:', response.substring(0, 100));
            
            try {
                // ‡∏•‡∏ö prefix ‡πÅ‡∏•‡∏∞ suffix ‡∏Ç‡∏≠‡∏á Google Sheets API
                const jsonString = response.substring(47, response.length - 2);
                const data = JSON.parse(jsonString);
                
                console.log('Parsed data structure:', {
                    cols: data.table.cols.length,
                    rows: data.table.rows.length
                });
                
                // ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
                const columnNames = data.table.cols.map(col => col.label || 'unnamed');
                console.log('Column names:', columnNames);
                
                // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô Array of Objects
                allData = data.table.rows.map(row => {
                    const obj = {};
                    row.c.forEach((cell, index) => {
                        const header = data.table.cols[index].label || `col${index}`;
                        obj[header] = cell ? (cell.v || '') : '';
                    });
                    return obj;
                });
                
                console.log('Data loaded successfully:', allData.length, 'rows');
                console.log('First row sample:', allData[0]);
                console.log('All column names in Google Sheets:', Object.keys(allData[0]));
                console.log('Sample data from each column:');
                Object.keys(allData[0]).forEach((key, index) => {
                    console.log(`  Column ${index}: "${key}" = "${allData[0][key]}"`);
                });
                
                // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å filter
                filteredData = [...allData];
                populateDropdownOptions();
                displayData(filteredData);
                updateCount();
                
                // ‡∏ã‡πà‡∏≠‡∏ô loading animation
                $('.btn.refresh i').removeClass('loading');
                
                
            } catch (error) {
                console.error('Error parsing data:', error);
                console.error('Error stack:', error.stack);
                alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•\n\n' + error.message);
                $('#dataTable tbody').html('<tr><td colspan="8" class="no-data">‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•<br>' + error.message + '</td></tr>');
                $('.btn.refresh i').removeClass('loading');
            }
        },
        error: function(xhr, status, error) {
            console.error('AJAX Error!');
            console.error('Status:', status);
            console.error('Error:', error);
            console.error('XHR Status:', xhr.status);
            console.error('XHR Response:', xhr.responseText);
            
            let errorMsg = '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ\n\n';
            errorMsg += '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:\n';
            errorMsg += '1. Google Sheets ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏£‡πå‡πÄ‡∏õ‡πá‡∏ô "Anyone with the link"\n';
            errorMsg += '2. ‡∏ä‡∏∑‡πà‡∏≠ Sheet (‡πÅ‡∏ó‡πá‡∏ö) ‡∏ï‡πâ‡∏≠‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á: "' + SHEET_NAME + '"\n';
            errorMsg += '3. SHEET_ID ‡∏ï‡πâ‡∏≠‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á: ' + SHEET_ID + '\n\n';
            errorMsg += '‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:\n';
            errorMsg += 'Status: ' + status + '\n';
            errorMsg += 'Error: ' + error;
            
            alert(errorMsg);
            $('.btn.refresh i').removeClass('loading');
        }
    });
}

function populateDropdownOptions() {
    const years = new Set();
    const depts = new Set();
    const ranks = new Set();
    
    // ‡∏î‡∏∂‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    const yearType = $('#typeFilter').val().trim() || '‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤';
    
    console.log('üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• allData:', allData.length, '‡πÅ‡∏ñ‡∏ß');
    
    allData.forEach((row, index) => {
        const columns = Object.values(row);
        
        // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å index ‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏õ‡∏µ
        let yearIndex = 2; // default ‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤
        
        if(yearType === "‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤") {
            yearIndex = 2;
        } else if(yearType === "‡∏õ‡∏µ‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô") {
            yearIndex = 1;
        } else if(yearType === "‡∏õ‡∏µ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì") {
            yearIndex = 0;
        }
        
        // ‡∏î‡∏∂‡∏á‡∏õ‡∏µ
        const yearValue = columns[yearIndex];
        if (yearValue != null && yearValue.toString().trim() !== '') {
            years.add(yearValue.toString().trim());
        }
        
        // ‡∏î‡∏∂‡∏á‡∏†‡∏≤‡∏Ñ‡∏ß‡∏¥‡∏ä‡∏≤ (index 4)
        const deptValue = columns[4];
        if (deptValue != null && deptValue.toString().trim() !== '') {
            depts.add(deptValue.toString().trim());
        }
        
        // ‡∏î‡∏∂‡∏á‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ú‡∏•‡∏á‡∏≤‡∏ô (index 5)
        const rankValue = columns[5];
        if (rankValue != null && rankValue.toString().trim() !== '') {
            ranks.add(rankValue.toString().trim());
        }
    });

    console.log('üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å Google Sheets:');
    console.log('  ‡∏õ‡∏µ:', Array.from(years).sort((a, b) => b - a));
    console.log('  ‡∏†‡∏≤‡∏Ñ‡∏ß‡∏¥‡∏ä‡∏≤:', Array.from(depts).sort());
    console.log('  ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ú‡∏•‡∏á‡∏≤‡∏ô:', Array.from(ranks).sort());

    // ============================================
    // ‡πÄ‡∏ï‡∏¥‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏õ‡∏µ (‡πÑ‡∏°‡πà‡∏°‡∏µ default - ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å Sheets)
    // ============================================
    const currentYear = $('#yearFilter').val(); // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ß‡πâ
    const $yearFilter = $('#yearFilter');
    $yearFilter.find('option:not(:first)').remove();
    
    const yearArray = Array.from(years).sort((a, b) => b - a);
    yearArray.forEach(year => {
        const selected = year == currentYear ? 'selected' : '';
        $yearFilter.append(`<option value="${year}" ${selected}>${year}</option>`);
    });
    
    console.log('‚úÖ ‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô dropdown:', yearArray.length, '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£');
    
    // ============================================
    // ‡πÄ‡∏ï‡∏¥‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î‡∏†‡∏≤‡∏Ñ‡∏ß‡∏¥‡∏ä‡∏≤ - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ö default
    // ============================================
    const currentDept = $('#deptFilter').val(); // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ß‡πâ
    const $deptFilter = $('#deptFilter');
    $deptFilter.find('option:not(:first)').remove();
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Map ‡∏Ç‡∏≠‡∏á default dept (normalize ‡πÄ‡∏õ‡πá‡∏ô key, ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á‡πÄ‡∏õ‡πá‡∏ô value)
    const defaultDeptsMap = new Map();
    defaultOptions.dept.filter(d => d !== "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î").forEach(dept => {
        defaultDeptsMap.set(normalizeText(dept), dept);
    });
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ö default (‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡πÅ‡∏ö‡∏ö normalize)
    const newDepts = Array.from(depts).filter(dept => {
        const normalizedDept = normalizeText(dept);
        return !defaultDeptsMap.has(normalizedDept);
    });
    
    if (newDepts.length > 0) {
        console.log('‚ú® ‡∏†‡∏≤‡∏Ñ‡∏ß‡∏¥‡∏ä‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤:', newDepts);
    } else {
        console.log('‚ÑπÔ∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏†‡∏≤‡∏Ñ‡∏ß‡∏¥‡∏ä‡∏≤‡πÉ‡∏´‡∏°‡πà (‡∏ó‡∏∏‡∏Å‡∏†‡∏≤‡∏Ñ‡∏ß‡∏¥‡∏ä‡∏≤‡∏°‡∏µ‡πÉ‡∏ô default ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß)');
    }
    
    // ‡∏£‡∏ß‡∏° default + ‡πÉ‡∏´‡∏°‡πà ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
    const allDepts = [
        ...defaultOptions.dept.filter(d => d !== "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"),
        ...newDepts
    ];
    
    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
    allDepts.sort((a, b) => a.localeCompare(b, 'th'));
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏Ç‡πâ‡∏≤ dropdown
    allDepts.forEach(dept => {
        const selected = dept == currentDept ? 'selected' : '';
        $deptFilter.append(`<option value="${dept}" ${selected}>${dept}</option>`);
    });
    
    // ============================================
    // ‡πÄ‡∏ï‡∏¥‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ú‡∏•‡∏á‡∏≤‡∏ô - ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ö default
    // ============================================
    const currentRank = $('#rankFilter').val(); // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ß‡πâ
    const $rankFilter = $('#rankFilter');
    $rankFilter.find('option:not(:first)').remove();
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Map ‡∏Ç‡∏≠‡∏á default rank (normalize ‡πÄ‡∏õ‡πá‡∏ô key, ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á‡πÄ‡∏õ‡πá‡∏ô value)
    const defaultRanksMap = new Map();
    defaultOptions.rank.filter(r => r !== "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î").forEach(rank => {
        defaultRanksMap.set(normalizeText(rank), rank);
    });
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ö default (‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡πÅ‡∏ö‡∏ö normalize)
    const newRanks = Array.from(ranks).filter(rank => {
        const normalizedRank = normalizeText(rank);
        return !defaultRanksMap.has(normalizedRank);
    });
    
    if (newRanks.length > 0) {
        console.log('‚ú® ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤:', newRanks);
    } else {
        console.log('‚ÑπÔ∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà (‡∏ó‡∏∏‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏°‡∏µ‡πÉ‡∏ô default ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß)');
    }
    
    // ‡∏£‡∏ß‡∏° default + ‡πÉ‡∏´‡∏°‡πà ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
    const allRanks = [
        ...defaultOptions.rank.filter(r => r !== "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"),
        ...newRanks
    ];
    
    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
    allRanks.sort((a, b) => a.localeCompare(b, 'th'));
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏Ç‡πâ‡∏≤ dropdown
    allRanks.forEach(rank => {
        const selected = rank == currentRank ? 'selected' : '';
        $rankFilter.append(`<option value="${rank}" ${selected}>${rank}</option>`);
    });
    
    console.log('‚úÖ ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô dropdown:', allRanks.length, '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£)');
    
    // ============================================
    // ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    // ============================================
    console.log('üìã ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô Dropdown:');
    console.log('  - ‡∏õ‡∏µ:', years.size, '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å Google Sheets)');
    console.log('  - ‡∏†‡∏≤‡∏Ñ‡∏ß‡∏¥‡∏ä‡∏≤:', defaultDeptsMap.size, 'default +', newDepts.length, '‡πÉ‡∏´‡∏°‡πà =', allDepts.length, '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£)');
    console.log('  - ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ú‡∏•‡∏á‡∏≤‡∏ô:', defaultRanksMap.size, 'default +', newRanks.length, '‡πÉ‡∏´‡∏°‡πà =', allRanks.length, '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£)');
    console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
function filterData() {
    const yearType = $('#typeFilter').val().trim() || '‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤';
    const year = $('#yearFilter').val().trim();
    const dept = $('#deptFilter').val().trim();
    const rank = $('#rankFilter').val().trim();
    const author = $('#authorFilter').val().toLowerCase().trim();
    const searchName = $('#keyword').val().toLowerCase().trim();

    console.log('üîç Filtering with:', {yearType, year, dept, rank, author, searchName});

    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏•‡∏¢ (‡πÄ‡∏ß‡πâ‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏õ‡∏µ) ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    if (!year && !dept && !rank && !author && !searchName) {
        filteredData = [...allData];
        displayData(filteredData);
        updateCount();
        return;
    }

    filteredData = allData.filter(row => {
        const columns = Object.values(row);
        
        // ‡∏õ‡∏µ - ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å index ‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏õ‡∏µ
        if (year) {
            let yearIndex = 2; // default ‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤
            
            if(yearType === "‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤") {
                yearIndex = 2;
            } else if(yearType === "‡∏õ‡∏µ‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô") {
                yearIndex = 1;
            } else if(yearType === "‡∏õ‡∏µ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì") {
                yearIndex = 0;
            }
            
            const yearValue = columns[yearIndex] || '';
            if (!yearValue.toString().includes(year)) return false;
        }
        
        // ‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ú‡∏•‡∏á‡∏≤‡∏ô - ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô index 3
        if (author) {
            const authorValue = (columns[3] || '').toString().toLowerCase();
            if (!authorValue.includes(author)) return false;
        }
        
        // ‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î‡∏†‡∏≤‡∏Ñ‡∏ß‡∏¥‡∏ä‡∏≤ - ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô index 4
        if (dept) {
            const deptValue = (columns[4] || '').toString();
            if (!deptValue.includes(dept)) return false;
        }
        
        // ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏•‡∏á‡∏≤‡∏ô (‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÅ‡∏•‡∏∞‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©)
        // ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ - index 7, ‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏© - index 8
        if (searchName) {
            const thaiName = (columns[7] || '').toString().toLowerCase();
            const engName = (columns[8] || '').toString().toLowerCase();
            if (!thaiName.includes(searchName) && !engName.includes(searchName)) return false;
        }
        
        // ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ú‡∏•‡∏á‡∏≤‡∏ô - ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô index 5
        if (rank) {
            const rankValue = (columns[5] || '').toString();
            if (!rankValue.includes(rank)) return false;
        }
        
        return true;
    });

    console.log('‚úÖ Filtered results:', filteredData.length);
    displayData(filteredData);
    updateCount();
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á
function displayData(data) {
    const $tbody = $('#dataTable tbody');
    $tbody.empty();

    if (data.length === 0) {
        $tbody.html('<tr><td colspan="8" class="no-data">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</td></tr>');
        return;
    }

    console.log('üìä Displaying', data.length, 'rows');

    // ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    const yearType = $('#typeFilter').val().trim() || '‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤';

    data.forEach((row, index) => {
        // Debug: ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 3 ‡πÅ‡∏ñ‡∏ß‡πÅ‡∏£‡∏Å
        if (index < 3) {
            console.log(`Row ${index} data:`, row);
            console.log('All values:', Object.values(row));
        }
        
        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡πà‡∏≤ - ‡∏ñ‡πâ‡∏≤‡∏ß‡πà‡∏≤‡∏á‡πÉ‡∏´‡πâ‡πÉ‡∏™‡πà "-"
        const getValue = (val) => {
            if (val === null || val === undefined || val === '') return '-';
            const strVal = val.toString().trim();
            return strVal === '' ? '-' : strVal;
        };

        const columns = Object.values(row);

        // ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏õ‡∏µ‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
        let yearValue = '-';
        let yearIndex = 2; // default ‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤

        if(yearType === "‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤") {
            yearIndex = 2;
        } else if(yearType === "‡∏õ‡∏µ‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô") {
            yearIndex = 1;
        } else if(yearType === "‡∏õ‡∏µ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì") {
            yearIndex = 0;
        }

        yearValue = getValue(columns[yearIndex]);
        
        // ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏ú‡∏•‡∏¥‡∏ï‡∏ú‡∏•‡∏á‡∏≤‡∏ô
        let author = getValue(columns[3]);
        // ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà , ‡∏î‡πâ‡∏ß‡∏¢ ,<br> ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡∏∂‡πâ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÉ‡∏´‡∏°‡πà
        if (author !== '-') {
            author = author.replace(/,\s*/g, ',<br>');
        }
        
        // ‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î‡∏†‡∏≤‡∏Ñ‡∏ß‡∏¥‡∏ä‡∏≤
        const department = getValue(columns[4]);
        
        // ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
        const titleThai = getValue(columns[7]);
        
        // ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©
        const titleEng = getValue(columns[8]);
        
        // ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ú‡∏•‡∏á‡∏≤‡∏ô
        const level = getValue(columns[5]);
        
        // ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á
        const reference = getValue(columns[10]);

        const rowHTML = `
            <tr>
                <td>${yearType}</td>
                <td>${yearValue}</td>
                <td class="${author === '-' ? 'center-dash' : ''}">${author}</td>
                <td class="${department === '-' ? 'center-dash' : ''}">${department}</td>
                <td>${titleThai}</td>
                <td>${titleEng}</td>
                <td class="${level === '-' ? 'center-dash' : ''}">${level}</td>
                <td class="${reference === '-' ? 'center-dash' : ''}">${reference}</td>
            </tr>
        `;
        $tbody.append(rowHTML);
    });
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
function updateCount() {
    $('#count').text(filteredData.length);
    console.log('üìà Count updated:', filteredData.length);
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Export ‡πÑ‡∏õ‡∏¢‡∏±‡∏á Excel - Export ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á (filteredData)
function exportTableToExcel() {
    if (filteredData.length === 0) {
        showNotification('‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Export', 'warning');
        return;
    }

    console.log('üì§ Exporting', filteredData.length, 'rows to Excel');

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á workbook
    const wb = XLSX.utils.book_new();
    
    // ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    const yearType = $('#typeFilter').val().trim() || '‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤';
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö export
    const exportData = filteredData.map(row => {
        const columns = Object.values(row);
        
        // ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏õ‡∏µ‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
        let yearIndex = 2; // default ‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤
        if(yearType === "‡∏õ‡∏µ‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô") {
            yearIndex = 1;
        } else if(yearType === "‡∏õ‡∏µ‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì") {
            yearIndex = 0;
        }
        
        return {
            '‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏õ‡∏µ': yearType,
            '‡∏õ‡∏µ': columns[yearIndex] || '-',
            '‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏ú‡∏•‡∏¥‡∏ï‡∏ú‡∏•‡∏á‡∏≤‡∏ô': columns[3] || '-',
            '‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î‡∏†‡∏≤‡∏Ñ‡∏ß‡∏¥‡∏ä‡∏≤': columns[4] || '-',
            '‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏•‡∏á‡∏≤‡∏ô (‡πÑ‡∏ó‡∏¢)': columns[7] || '-',
            '‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏•‡∏á‡∏≤‡∏ô (Eng)': columns[8] || '-',
            '‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ú‡∏•‡∏á‡∏≤‡∏ô': columns[5] || '-',
            '‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á': columns[10] || '-'
        };
    });
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á worksheet ‡∏à‡∏≤‡∏Å JSON
    const ws = XLSX.utils.json_to_sheet(exportData);
    
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
    ws['!cols'] = [
        { wch: 15 }, // ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏õ‡∏µ
        { wch: 10 }, // ‡∏õ‡∏µ
        { wch: 30 }, // ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏ú‡∏•‡∏¥‡∏ï‡∏ú‡∏•‡∏á‡∏≤‡∏ô
        { wch: 25 }, // ‡∏™‡∏±‡∏á‡∏Å‡∏±‡∏î‡∏†‡∏≤‡∏Ñ‡∏ß‡∏¥‡∏ä‡∏≤
        { wch: 50 }, // ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏•‡∏á‡∏≤‡∏ô (‡πÑ‡∏ó‡∏¢)
        { wch: 50 }, // ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏•‡∏á‡∏≤‡∏ô (Eng)
        { wch: 35 }, // ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ú‡∏•‡∏á‡∏≤‡∏ô
        { wch: 50 }  // ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á
    ];
    
    XLSX.utils.book_append_sheet(wb, ws, '‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡∏ï‡∏µ‡∏û‡∏¥‡∏°‡∏û‡πå');
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
    const now = new Date();
    const dateStr = now.toLocaleDateString('th-TH', { 
        year: 'numeric', 
        month: '2-digit', 
        day: '2-digit' 
    }).replace(/\//g, '-');
    const fileName = `‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡∏ï‡∏µ‡∏û‡∏¥‡∏°‡∏û‡πå_${dateStr}.xlsx`;
    
    // Download ‡πÑ‡∏ü‡∏•‡πå
    XLSX.writeFile(wb, fileName);
    
    console.log('‚úÖ Excel file exported:', fileName);
    showNotification(`Export ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${filteredData.length} ‡πÅ‡∏ñ‡∏ß`, 'success');
}